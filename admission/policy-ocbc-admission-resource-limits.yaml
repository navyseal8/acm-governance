apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
    policy.open-cluster-management.io/description: No resource limits, no talk
    policy.open-cluster-management.io/standards: NIST SP 800-53
  name: ocbc-admission-no-resource-limits
  namespace: ocbc-policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: templates.gatekeeper.sh/v1beta1
      kind: ConstraintTemplate
      metadata:
        name: k8srequiredresourcelimits
      spec:
        crd:
          spec:
            names:
              kind: K8sRequiredResourceLimits
        targets:
        - rego: |
            package k8srequiredresourcelimits
            violation[{"msg": msg}] {
              input.review.kind.kind == "Pod"
              containers := input.review.object.spec.containers
              some i
              container := containers[i]
              not has_resource_requests(container)
              msg := sprintf("Container '%s' is missing resource requests for CPU and/or memory", [container.name])
            }
            violation[{"msg": msg}] {
              input.review.kind.kind == "Pod"
              containers := input.review.object.spec.containers
              some i
              container := containers[i]
              not has_resource_limits(container)
              msg := sprintf("Container '%s' is missing resource limits for CPU and/or memory", [container.name])
            }
            has_resource_requests(container) {
              container.resources.requests["cpu"]
              container.resources.requests["memory"]
            }
            has_resource_limits(container) {
              container.resources.limits["cpu"]
              container.resources.limits["memory"]
            }
          target: admission.k8s.gatekeeper.sh
  - objectDefinition:
      apiVersion: constraints.gatekeeper.sh/v1beta1
      kind: K8sRequiredResourceLimits
      metadata:
        name: require-cpu-mem-limits
      spec:
        enforcementAction: enforce
        match:
          excludedNamespaces:
          - kube-system
          - kube-public
          - openshift-*
          - open-cluster-management-*
          kinds:
          - apiGroups:
            - ""
            kinds:
            - Pod
  remediationAction: enforce
